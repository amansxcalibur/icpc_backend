// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contest {
  id    Int          @id @default(autoincrement())
  year  Int
  type  String
  site  String //enums
  teams TeamScores[]
}

model Institution {
  id    Int    @id @default(autoincrement())
  name  String @unique
  teams Team[]
}

model Team {
  id            Int        @id
  name          String
  institutionId Int
  institution   Institution   @relation(fields: [institutionId], references: [id])
  isWomenOnly   Boolean
  contests      TeamScores[]
  members       TeamMembers[]
  coachId       Int?          @unique
  coach         Coach?        @relation(fields: [coachId], references: [id])
}

model TeamMembers {
  teamId       Int
  contestantId Int
  team         Team       @relation(fields: [teamId], references: [id])
  contestant   Contestant @relation(fields: [contestantId], references: [id])

  @@id([teamId, contestantId])
}

model TeamScores {
  id        Int    @id @default(autoincrement())
  contestId Int
  teamId    Int
  score     Float?

  contest Contest @relation(fields: [contestId], references: [id])
  team    Team    @relation(fields: [teamId], references: [id])
}

model Contestant {
  id    Int           @id @default(autoincrement())
  name  String
  teams TeamMembers[]
}

model Coach {
  id   Int    @id @default(autoincrement())
  name String
  team Team?
}
